!--LUA BEGIN
!function trygetenv(envvar, a, b)
!  if os.getenv(envvar) then
!    return a
!  else
!    return b
!  end
!end
!
!quadratic = trygetenv("elmer_quadratic", "true", "false")
!resultwhen = trygetenv("elmer_no_save_vtu", "never", "after timestep")
!--LUA END

#B0 = 400e-3
#mu_pm = 1
#mu_plate = 2000
#mu0 = pi*4e-7

Header
  Mesh DB "./results" "../../mesh/full_model"
End

Simulation
  Max Output Level = #trygetenv("elmer_verbose", "5", "1")
  Simulation type = steady state
  mesh levels = 1
End

Solver 1 ! avsolver
  Equation = "mgdyn"
  Procedure = "MagnetoDynamics" "WhitneyAVSolver"
  Use Piola Transform = logical true
  variable = string "av"
  quadratic approximation = logical #quadratic

  Newton-Raphson Iteration = Logical True
  Nonlinear System Max Iterations = 200
  Nonlinear System Convergence Tolerance = 1e-9
  nonlinear system convergence measure = solution

  nonlinear system relaxation factor = 0.5
  Linear System Solver = Iterative
  Linear System Preconditioning = none
  Linear System Residual Output = 100
  Linear System Max Iterations = 2000
  Linear System Iterative Method = bicgstabl
  BicGStabL Polynomial Degree = 2
  Linear System GCR Restart = 600
  Linear System Convergence Tolerance = 1e-9
  Linear System Abort Not Converged = False

  Edge Basis = Logical True
  Nonlinear System Consistent Norm = false
End

Solver 2 ! postprocess
  ! Exec Solver = after timestep
  Equation = "MGDynamicsCalc"

  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"
  Linear System Symmetric = True
  Potential Variable = String "AV"
  use piola Transform = true
  quadratic approximation = logical # quadratic

!  Calculate Current Density = Logical True
!  Calculate Electric Field = Logical True
  Calculate Magnetic Field Strength = Logical True
  Calculate Magnetic Vector Potential = Logical True
  Calculate Magnetic Flux Density = Logical True
  calculate nodal forces = logical true

  Linear System Solver = "Iterative"
  Linear System Preconditioning = None
  Linear System Residual Output = 0
  Linear System Max Iterations = 5000
  Linear System Iterative Method = CG
  Linear System Convergence Tolerance = 1.0e-8
  optimize bandwidth = false
  
  Nonlinear System Consistent Norm = True
End

Solver 3 ! integrate
  Equation = "probes"
  Procedure = "Probes" "VolumeProbe"
  exec solver = after timestep
  body force probe names  = string "V Bz Bsq"
End

solver 4 ! savescalars
  exec solver = after timestep
  Equation = SaveScalars
  Procedure = "SaveData" "SaveScalars"
  filename = "scalars.dat"
  output directory = "results"
end

solver 5 ! resultoutput
  exec solver = #resultwhen
  Equation = results
  Procedure = "ResultOutputSolve" "ResultOutputSolver" 
  Output File Name = case
  Output Format = vtu
  output directory = "results"
  Discontinuous Bodies = true
  save geometry ids = true
end

equation 1
  name = "equations"
  active solvers(3) = 1 2 3
end

body 1 ! air
  target bodies(1) = 7
  material = 1
  equation = 1
end

body 2 ! plate, core and sleeve
  target bodies(3) = 1 3 4
  material = 2
  equation = 1
end

body 3 ! magnet
  target bodies(1) = 2
  material = 3
  equation = 1
  body force = 1
end

body 4 ! ROI
  target bodies(1) = 6
  material = 1
  equation = 1
  body force = 2
end

Material 1
  Relative Permeability = 1
  Relative Permittivity = 1
end

Material 3
  Relative Permeability = #mu_pm
  Relative Permittivity = 1
end

material 2
  ! Relative Permeability = #mu_plate
  Relative Permittivity = 1

  ! H-B Curve(131,2) = Real
   ! INCLUDE bh.csv
  H-B Curve = Variable coupled iter
    Real Cubic monotone
     Include bh.csv
    End
  Cubic Spline for H-B curve = logical true
end

Body Force 1 ! magnetization
  Magnetization 3 = # B0 / (mu_pm*mu0)
End

body force 2
  Bz = variable magnetic flux density e
    real lua "tx[2]"
  Bsq = variable magnetic flux density e
    real lua "tx[0]^2 + tx[1]^2 + tx[2]^2"
  v = real 1
end

boundary condition 1 ! truncation bc
  target boundaries(1) = 32
  AV {e} 1 = real 0
  AV {e} 2 = real 0
  AV {e} 3 = real 0
end

! boundary condition 2 ! symmetry bc (natural condition with zero datum, why is this defined even?)
!   target boundaries(3) = 31 22 29
!   ! magnetic field strength 1 = 0
!   ! magnetic field strength 2 = 0
! end

